//
//  MemberViewController.m
//  XiongDaJinFu
//
//  Created by 小彬 on 17/7/5.
//  Copyright  2017年 digirun. All rights reserved.
//

#import "MemberViewController.h"
#import "AnswerScrollView.h"
#import "MHPaperModel.h"
#import "MHExamEndViewController.h"
#define LEFT_MARGIN 20
#define BTN_WIDTH   100
#define BTN_HIGHT   40
@interface MemberViewController ()<UITableViewDataSource,UITableViewDelegate>
{
    MHPaperModel  * model;
    NSIndexPath  * selectIndexPath;
}
@property (strong, nonatomic) UITableView *table;
@property  (nonatomic,strong)  NSMutableArray  * answerArray;
@end
@implementation MemberViewController

-(NSMutableArray*)answerArray{
    if (!_answerArray) {
        _answerArray = [NSMutableArray new];
    }

    return _answerArray;

}
-(UITableView *)table {
    if (!_table) {
        _table = [[UITableView alloc]initWithFrame:CGRectMake(0, 64, self.view.bounds.size.width, self.view.bounds.size.height+200) style:UITableViewStylePlain];
        _table.delegate = self;
        _table.dataSource = self;
        _table.rowHeight = 100*SCREENHEIGHT/1334;
        _table.tableFooterView = [[UIView alloc] init];
        _table.sectionHeaderHeight = 64;
        
    }
    return _table;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    [self setUpNewNai:nil Title:@"SAS焦虑自评量表_试卷"];
    self.automaticallyAdjustsScrollViewInsets = NO;
    [self.view addSubview:self.table];
    [self setUpUi];
    [self getPapaerDataWithNPStatus:1 withFirst:@"0" withUpid:@"0" withUpUuid:nil];
}
-(void)setUpUi{

    for (int i =0 ; i <2; i++) {
        UIButton  * btn = [[UIButton alloc] init];
        btn.backgroundColor = [UIColor colorWithHexString:@"#0183dc"];
        btn.tag = 10086+i;
        btn.clipsToBounds = YES;
        btn.layer.cornerRadius = 10;
        if (i==0) {
            [btn setTitle:@"上一题" forState:UIControlStateNormal];
            btn.frame = CGRectMake(LEFT_MARGIN, 500, BTN_WIDTH, BTN_HIGHT);

        }else{
        [btn setTitle:@"下一题" forState:UIControlStateNormal];
            btn.frame = CGRectMake(SCREENWIDTH-LEFT_MARGIN-BTN_WIDTH, 500, BTN_WIDTH, BTN_HIGHT);

        }
       
        [btn addTarget:self action:@selector(changeQuestion:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:btn];
    }
}
-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    UIView  * bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREENWIDTH, 64)];
    UILabel  * numberLabel = [XDCommonTool newlabelWithTextColor:[UIColor blackColor] withTitle:[NSString stringWithFormat:@"第%@题/总%@题",model.eqOrder,model.qaTotleNum] fontSize:17];
    numberLabel.textAlignment =NSTextAlignmentLeft;
    numberLabel.frame = CGRectMake(5, 5, SCREENWIDTH, 20);
    [bgView addSubview:numberLabel];
    
    UILabel  * titleLabel = [XDCommonTool newlabelWithTextColor:[UIColor blackColor] withTitle:nil fontSize:17];
    titleLabel.frame = CGRectMake(5, 20, SCREENWIDTH, 80);
    titleLabel.textAlignment =NSTextAlignmentLeft;
    titleLabel.numberOfLines = 0;
    [bgView addSubview:titleLabel];
    titleLabel.text = model.eqName;
    
    //下一题
    if ([model.eqOrder isEqualToString:model.qaTotleNum]) {
        UIButton  * nextBtn = [self.view viewWithTag:10086+1];
        [nextBtn setTitle:@"提交答案" forState:UIControlStateNormal];
        [nextBtn addTarget:self action:@selector(commitAnswer) forControlEvents:UIControlEventTouchUpInside];
    }else{
        UIButton  * nextBtn = [self.view viewWithTag:10086+1];
        [nextBtn setTitle:@"下一题" forState:UIControlStateNormal];
        [nextBtn addTarget:self action:@selector(changeQuestion:) forControlEvents:UIControlEventTouchUpInside];

        nextBtn.hidden = NO;
    }
     //上一题
    if ([model.eqOrder isEqualToString:@"1"]){
        UIButton  * beforeBtn = [self.view viewWithTag:10086];
        beforeBtn.hidden = YES;
    }else{
        UIButton  * beforeBtn = [self.view viewWithTag:10086];
        beforeBtn.hidden = NO;
     }
    return bgView;
}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.answerArray.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    NSString *  cellIdentifier = @"CellIdentifier";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:cellIdentifier];
    }
    MHAnswerModel  * answerModel = self.answerArray[indexPath.row];
    cell.textLabel.text = answerModel.eaDesc;
    return cell;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    selectIndexPath = indexPath;
}
# pragma Action
-(void)changeQuestion:(UIButton*)sender{
    if (sender.tag==10086+1) {
        [self getPapaerDataWithNPStatus:2 withFirst:model.ID withUpid:model.upId withUpUuid:model.upUuid];
    }else if (sender.tag ==10086){
        [self getPapaerDataWithNPStatus:1 withFirst:model.ID withUpid:model.upId withUpUuid:model.upUuid];

    }
}
-(void)getPapaerDataWithNPStatus:(int)NPStatusInt withFirst:(NSString*)firstId withUpid:(NSString*)upidStr withUpUuid:(NSString*)UpUuidStr{
    
    [self.answerArray removeAllObjects];
    NSString  * tokenStr =   [[XDCommonTool readDicFromUserDefaultWithKey:USER_INFO].firstObject objectForKey:@"loginToken"];
    NSString  * idStr =   [[XDCommonTool readDicFromUserDefaultWithKey:USER_INFO].firstObject objectForKey:@"id"];
   
//    eaId	Integer	答案id
//    etId	Integer	试卷主题id
//    epId	Integer	试卷id
//    eqId	Integer	试题id
//    uiId	Integer	答题用户id,只在用户答题时有用,用户id为0 表示为展示答案, 用户id不为0表示为答题
//
    //第一次进入的时候不提交答案
    if (![firstId isEqualToString:@"0"]) {
       MHAnswerModel  * answerModel = [MHAnswerModel mj_objectWithKeyValues: model.list_uea[selectIndexPath.row]];
        NSString * commitAnswerUrlStr = [NSString stringWithFormat:@"%@?loginToken=%@&eaId=%@&etId=%@&epId=%@&eqId=%@&uiId=%@&upId=%@",URL_Test_Exam_UQA,tokenStr,answerModel.IDStr,model.etId,model.epId,answerModel.eqId,idStr,model.upId];
        //提交你的选项答案
        [[NetworkClient sharedClient] POST:commitAnswerUrlStr dict:nil succeed:^(id data) {
            NSLog(@"提交答案%@",data);
        } failure:^(NSError *error) {
            NSLog(@"%@",error);
            
        }];
    }
    
   
    

    
    
    //id 试题id,第一次id为0,表示是某张试卷的第一次请求试题题目
    //eqOrder 当前题顺序号,比如:当前为第3题，这里值为3
    //epId 试卷id
    //eqNPStatus 当前是往下一题还是上一题。  状态: 1 查上一题,2 查下一题

    NSString * urlStr = [NSString stringWithFormat:@"%@?loginToken=%@&epId=%@&id=%@&eqNPStatus=%@&upId=%@&upUuid=%@&uiId=%@",URL_Test_Exam_Question,tokenStr,self.paperIDStr,firstId,@(NPStatusInt),upidStr,UpUuidStr,idStr];
    [[NetworkClient sharedClient] POST:urlStr dict:nil succeed:^(id data) {
        NSArray  * dataArr = (NSArray*)data;
        model = [MHPaperModel mj_objectWithKeyValues:dataArr.firstObject];
        [model.list_uea enumerateObjectsUsingBlock:^(id  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
            MHAnswerModel * answerModel = [MHAnswerModel mj_objectWithKeyValues:obj];
            [self.answerArray addObject:answerModel];
            
        }];
        [self.table reloadData];
        NSLog(@"%@",data);
    } failure:^(NSError *error) {
        NSLog(@"%@",error);
        
    }];
}
-(void)commitAnswer{
    
    MHExamEndViewController   * memberVC = [MHExamEndViewController new];
    memberVC.upidStr = model.upId;
    
    
    [self.navigationController pushViewController:memberVC animated:YES];
    
   
}
@end
